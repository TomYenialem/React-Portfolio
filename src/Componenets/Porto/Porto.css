.portofolio-page {
  background-color: #131212;
}
.porto .d-flex {
  gap: 40px;
  margin: 20px;
  cursor: pointer;
  padding-bottom: 25px;
  animation: slideDown 0.3s ease-in-out forwards;
}
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.active {
  box-shadow: 0px 0px 10px black;
  padding: 5px 30px;
  border-radius: 30px;
  color: white;
  background-color: #404040;
  animation: buttonHighlightt 0.8s ease-in-out forwards;
}
@keyframes buttonHighlightt {
  from {
    background-color: #404040; /* Match inactive button color */
  }
  to {
    background-color: #212121; /* Highlight color for active button */
  }
}
.recent {
  border-bottom: 4px solid #fe0000;

  width: 100px;
}
.portofoilio {
  position: relative;
}

.project-name-overlay {
  position: absolute;
  top: 0%;
  left: 20%;
  width: 99%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;

  transition: all 0.3s ease-in-out;

  opacity: 0;
}
.git{
  display: flex;
  align-items: center;
  justify-self: center;
  gap: 20px;
  padding-top: 10px;

}
@media (max-width: 768px) {
  .project-name-overlay {
    left: 0;
    top: 0;
  }
}
.portofoilio img {
  box-shadow: 0px 0px 10px #404040;
  border-radius: 5px;
}

.portofoilio.hovered .project-name-overlay {
  opacity: 1;
  cursor: pointer;
  left: 0;
  top: 0;
}

.project-list .d-flex {
  flex-wrap: wrap;
}


.link-icons a:hover {
 color: #fe0000;
}
.link-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 10px;
  padding-top: 10px;
}
.stacks {
  display: flex;
  color: white;
  gap: 10px;
}
.stacks img {
  color: white;

  border-radius: 50%;
  padding: 5px;
}
.stack-images {
  width: 45px;
}
#porofoili-container {
  width: 90%;
}

#boxs {
  box-shadow: 0px 3px 3px rgba(255, 255, 255, 0.3);
}



/* import React, { useState } from "react";
import "./Porto.css";
import project from "../../assets/images/assets";
import { RiExternalLinkFill } from "react-icons/ri";
import { FaGithub } from "react-icons/fa";

export default function Porto() {
  const [filters, setFilter] = useState(project);
  const [activeFilter, setActiveFilter] = useState("all");
  const [isHovered, setIsHovered] = useState(Array(filters.length).fill(false));
  

 

  const handleFilterChange = (filterName) => {
    setFilter(
      filterName === "all"
        ? project
        : project.filter((pro) => pro.type === filterName)
    );
    setActiveFilter(filterName);
  };
  const handleMouseEnter = (index) => {
    setIsHovered((prevHover) => {
      const newHover = [...prevHover];
      newHover[index] = true;
      return newHover;
    });
  };

  const handleMouseLeave = (index) => {
    setIsHovered((prevHover) => {
      const newHover = [...prevHover];
      newHover[index] = false;
      return newHover;
    });
  };
  return (
    <div className="container porto text-white" id="Porto">
      <div className="text-white mt-5 pt-4 ">
        <h2 className="fw-bold col-6 re">my recent Portfolio</h2>
        <div className="recent"></div>
      </div>
      <div className=" project-list ">
        <div className="text-center d-flex justify-content-center mt-5 pt-2">
          <div
            className={` ${
              activeFilter === "all" ? "active" : "text-secondary"
            }`}
            onClick={() => handleFilterChange("all")}
          >
            All
          </div>
          <div
            className={` ${
              activeFilter === "js" ? "active" : "text-secondary"
            }`}
            onClick={() => handleFilterChange("js")}
          >
            JavaScript
          </div>
          <div
            className={` ${
              activeFilter === "react" ? "active" : "text-secondary"
            }`}
            onClick={() => handleFilterChange("react")}
          >
            React
          </div>
          <div
            className={` ${
              activeFilter === "Full-stack" ? "active" : "text-secondary"
            }`}
            onClick={() => handleFilterChange("Full-stack")}
          >
            Full-stack
          </div>
        </div>
        <div className="container mt-4 " id="porofoili-container">
          <div className="row row-cols-1 row-cols-md-3 g-4 cc">
            {filters.map((project, index) => (
              <div
                key={index}
                className={`portofoilio ${isHovered[index] ? "hovered" : ""}`}
                onMouseEnter={() => handleMouseEnter(index)}
                onMouseLeave={() => handleMouseLeave(index)}
              >
                <div id="boxs">
                  <img
                    src={project.image}
                    className="card-img-top"
                    alt={project.title}
                  />
                </div>
                <div className="project-name-overlay p-0 m-0 ">
                  <div className="link-wrapper">
                    <div className="text-center text-white">{project.name}</div>
                    <div className="text-center fs-3  link-icons">
                      <p className="mx-auto git">
                        {project.address&&(

                        <a href={project.address} target="_blank">
                          <RiExternalLinkFill />
                        </a>
                        )}
                        {
                          project.address2 && (
                        <a href={project.address2} target="_blank">
                          <FaGithub />
                        </a> 
                          )
                        }
                      </p>
                    </div>
                    <div className="stacks">
                      {Object.values(project.made).map((icons) => (
                        <img src={icons} alt="" className="stack-images" />
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
} */
